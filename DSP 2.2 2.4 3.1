%%       Loughborough University      %%
%%            Joseph Stone            %%
%%      Digital Signal Processing     %%
%%        Coursework Assignment       %%
close all
clear all

%%                M2.2                %%

A = 7;          % Amplitude of the signal
N = 13;         % Period of the signal
L = 100;        % Length of sample
Duty = 60;      % Duty cycle
n = 0:1:L-1;    % Output the range of values depending on length (0 to 99)

saw = A*sawtooth(2*pi*(n *(1/N)));  % Generate a sawtooth signal
f1 = figure;
subplot(2,1,1); % Setup a subplot for saw signal

stem(n,saw)     % plot a discrete saw function
grid on

sqr = A*square(2*pi*n*(1/N), Duty);

subplot(2,1,2)  % Setup a subplot for square signal
stem(n,sqr)     % plot a discrete square function
grid on

%%                M2.4a                %%
W0 = 2*pi; % Angluar frequency
As = 3; % Amplitude of Signal
Ls = 5; % Length
Ph = 0; % Phase angle
ns = linspace(0,Ls,100);
f2 = figure;
Sinwav = As*cos(W0*ns+Ph);

subplot(1,1,1)
stem(n, Sinwav)
grid on
title('Sinusoidal waveform');

%%                M2.4b                %%

angfreq = [0.14*pi, 0.24*pi, 0.34*pi, 0.68*pi, 0.75*pi];
f3 = figure;
Ls = 50; % Length
ns = linspace(0,Ls,1000);
for i = 1:5
   Sinwav = As*cos((angfreq(i)*ns)+Ph);
   
   s(i) = subplot(5, 1, i);
   S = stem(ns, Sinwav);
   title(s(i), angfreq(i));

end

%%                M3.1                 %%
clear all
R = [0.6, 0.9, 0.99];
theta = [0, pi, pi/4];
omega = 0:0.01:4*pi;

for p = 1:3
    d = (1-2.*R(p).*cos(theta(p))*exp(-1i.*omega)+(R(p).^(2))*exp(-1i*2.*omega));
    %G(p) = 1/((1-2*R.*cos(theta)*exp(-1j*W0))+R.^(2)*exp(-1j*2*W0));
    G = 1./d;

    
    Re = real(G);
    Im = imag(G);
    Magnitude = 20*log(abs(G));
    Phase = angle(G);
    figure(p+3);
    subplot(2,2,1);
    plot(omega, Re)
    title('Real')
    subplot(2,2,2);
    plot(omega, Im)
    title('Imaginary')
    subplot(2,2,3);
    
    plot(omega, Magnitude)
    title('Magnitude (db)')
    subplot(2,2,4);
    plot(omega, Phase)
    title('Phase')

end









